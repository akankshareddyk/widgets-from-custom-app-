<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_698230_my_custom_star_education</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_698230_my_custom_star_education">assignment_groupCHANGESTO8a5055c9c61122780043563ef53438e3^EQ<item display_table="sys_user_group" display_value="Hardware" endquery="false" field="assignment_group" goto="false" newquery="false" operator="CHANGESTO" or="false" value="8a5055c9c61122780043563ef53438e3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto assign users to star education</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var arr = [];
    var arr2 = [];
    var arr3 = [];
    var newusers = [];
    var lastLogin = ''
    var assignTo = '';
    var grpMember = '';
    var groupVal = current.getDisplayValue('assignment_group');
    var grpSysid = current.getValue('assignment_group');
    if (groupVal == 'Hardware') {
        var grpMem = new GlideRecord('sys_user_grmember');
        grpMem.addQuery('group.name=' + groupVal);
        grpMem.query();
        while (grpMem.next()) {
            grpMember = grpMem.getValue('user');
            arr.push(grpMember);
        }
        gs.info("array" + arr);
        //assignment_group=8a5055c9c61122780043563ef53438e3^assigned_to=46c4aeb7a9fe1981002bbd372644a37b
        for (var i = 0; i < arr.length; i++) {
            var starrec = new GlideRecord('x_698230_my_custom_star_education');
            starrec.addQuery('assignment_group=' + grpSysid);
            starrec.addQuery('assigned_to=' + arr[i])
            starrec.orderByDesc('last_assign_to_login');
            starrec.query();
            //gs.info("query :"+starrec.getEncodedQuery())
            if (starrec.next()) {
                var obj = {};
                lastLogin = starrec.getValue('last_assign_to_login');
                assignTo = starrec.getValue('assigned_to')
                obj['timeing'] = lastLogin;
                obj['sys_id'] = assignTo;
                arr2.push(obj);



                // You can add more fields as needed
                // Output the key-value pairs
            }


            //gs.info("last:"+lastLogin)
        }
        gs.info('Key-Value Pair: ' + JSON.stringify(arr2));

        arr2.sort(function(a, b) {

            var dateA = new GlideDateTime(a.timeing);
            var dateB = new GlideDateTime(b.timeing);
            return dateA.getNumericValue() - dateB.getNumericValue();

        });

        // Output the sorted array
        gs.info('Sorted array: ' + JSON.stringify(arr2));

        for (var i = 0; i < arr2.length; i++) {
            if (!arr.includes(arr2[i].sys_id)) {
                gs.info("Different value in 'test' but not in 'arr': " + test[i].sys_id);
            }
        }

        // Find values in 'arr' that are not in 'test'
        for (var j = 0; j < arr.length; j++) {
            var isFound = false;
            for (var k = 0; k < arr2.length; k++) {
                if (arr[j] === arr2[k].sys_id) {
                    isFound = true;
                    break;
                }
            }
            if (!isFound) {
                gs.info("Different value in 'arr' but not in 'test': " + arr[j]);
                newusers.push(arr[j])

            }


        }
        gs.info(newusers + "new users")

        if (newusers[i] != '') {
            gs.info("test2")
            for (var i = 0; i < newusers.length; i++) {
                var rec = new GlideRecord('x_698230_my_custom_star_education');
                rec.addQuery('sys_id=' + current.sys_id);
                rec.query();
                if (rec.next()) {
                    gs.info("assigned value:" + JSON.stringify(newusers[0]))
                    rec.assigned_to = newusers[0];
                    rec.update();
                }
            }
        } else {
            gs.info("test")
            for (var i = 0; i < arr2.length; i++) {
                var rec = new GlideRecord('x_698230_my_custom_star_education');
                rec.addQuery('sys_id=' + current.sys_id);
                rec.query();
                if (rec.next()) {
                    gs.info("assigned value:" + JSON.stringify(arr2[0].sys_id))
                    rec.assigned_to = arr2[0].sys_id;
                    rec.update();
                }
            }
        }


    }




})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-01-23 14:46:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d420f819c3971210aaa1b92ed40131e1</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>Auto assign users to star education</sys_name>
        <sys_overrides/>
        <sys_package display_value="My custom App" source="x_698230_my_custom">d01a706f475e611026847688c26d438c</sys_package>
        <sys_policy/>
        <sys_scope display_value="My custom App">d01a706f475e611026847688c26d438c</sys_scope>
        <sys_update_name>sys_script_d420f819c3971210aaa1b92ed40131e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-28 17:31:48</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d420f819c3971210aaa1b92ed40131e1"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>d420f819c3971210aaa1b92ed40131e1</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-01-23 14:46:31</sys_created_on>
        <sys_id>c2503cd1c3971210aaa1b92ed40131fc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-23 14:46:31</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
